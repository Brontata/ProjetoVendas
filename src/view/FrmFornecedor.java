package view;

import static com.sun.java.accessibility.util.AWTEventMonitor.addWindowListener;
import dao.DaoFornecedor;
import java.sql.SQLException;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Date;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import javax.swing.text.DefaultFormatterFactory;
import javax.swing.text.MaskFormatter;
import model.Fornecedores;

public class FrmFornecedor extends javax.swing.JInternalFrame {
    
    MaskFormatter mfTel;
    MaskFormatter mfCep;
    MaskFormatter mfUf;
    MaskFormatter mfFax;
    MaskFormatter mfCnpj;
    MaskFormatter mfIe;
    MaskFormatter mfData;
    boolean gravar = false;
    boolean editar = false;
    static boolean visible = false;

    public static boolean getVis() {
        return visible;
    }

    public void setVis(boolean v) {
        visible = v;
    }
    
    public FrmFornecedor() {
        //initComponents();
        try {
            // Método abaixo já vem pré-digitado no construtor e está escondido abaixo, pois foi gerado pelo editor gráfico
            initComponents();
            //Instaceamento dos MaskFormatter
            mfUf = new MaskFormatter("UU");
            mfUf.setPlaceholderCharacter('_');
            mfUf.setValueContainsLiteralCharacters(false);
            mfUf.setValueClass(String.class);
            DefaultFormatterFactory dffUf = new DefaultFormatterFactory(mfUf);
            txtUF.setFormatterFactory(dffUf);

            mfCep = new MaskFormatter("#####-###");
            mfCep.setPlaceholderCharacter('_');
            mfCep.setValueContainsLiteralCharacters(false);
            mfCep.setValueClass(String.class);
            DefaultFormatterFactory dffCep = new DefaultFormatterFactory(mfCep);
            txtCep.setFormatterFactory(dffCep);

            mfTel = new MaskFormatter("(##)*####-####");
            mfTel.setPlaceholderCharacter('_');
            mfTel.setValidCharacters(" 0123456789");
            mfTel.setValueContainsLiteralCharacters(false);
            mfTel.setValueClass(String.class);
            DefaultFormatterFactory dffTel = new DefaultFormatterFactory(mfTel);
            txtTelefone.setFormatterFactory(dffTel);
            
            
            mfFax = new MaskFormatter("(##)####-####");
            mfFax.setPlaceholderCharacter('_');
            mfFax.setValueContainsLiteralCharacters(false);
            mfFax.setValueClass(String.class);
            DefaultFormatterFactory dffFax = new DefaultFormatterFactory(mfFax);
            txtFax.setFormatterFactory(dffFax);
            
            mfCnpj = new MaskFormatter("##.###.###-####-##");
            mfCnpj.setPlaceholderCharacter('_');
            mfCnpj.setValueContainsLiteralCharacters(false);
            mfCnpj.setValueClass(String.class);
            DefaultFormatterFactory dffCnpj = new DefaultFormatterFactory(mfCnpj);
            txtCnpj.setFormatterFactory(dffCnpj);
            
            mfIe = new MaskFormatter("########-##");
            mfIe.setPlaceholderCharacter('_');
            mfIe.setValueContainsLiteralCharacters(false);
            mfIe.setValueClass(String.class);
            DefaultFormatterFactory dffIe = new DefaultFormatterFactory(mfIe);
            txtIe.setFormatterFactory(dffIe);
            

            mfData = new MaskFormatter("##/##/####");
            mfData.setPlaceholderCharacter('_');
            mfData.setValueContainsLiteralCharacters(true);
            mfData.setValueClass(String.class);
            DefaultFormatterFactory dffData = new DefaultFormatterFactory(mfData);
            txtDataCad.setFormatterFactory(dffData);
        } catch (ParseException ex) {
            JOptionPane.showMessageDialog(null, "Ocorreu um ParseException na aplicação do MaskFormatter: " + ex.getMessage(), "Erro:", JOptionPane.ERROR_MESSAGE);
        }
        DaoFornecedor c = new DaoFornecedor();
        String razao = "";
        c.setRazao(razao);
        try {
            ArrayList<DaoFornecedor> listafoFornecedores = c.pesquisar(c);
            atualizaTable(listafoFornecedores);
        } catch (SQLException e) {
            JOptionPane.showMessageDialog(null, "Oorreu um erro no DB: " + e.getMessage(), "Erro:", JOptionPane.ERROR_MESSAGE);
        } catch (ClassNotFoundException e) {
            JOptionPane.showMessageDialog(null, "Oorreu um erro de classe: " + e.getMessage(), "Erro:", JOptionPane.ERROR_MESSAGE);
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Oorreu um erro: " + e.getMessage(), "Erro:", JOptionPane.ERROR_MESSAGE);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        tblFornecedor = new javax.swing.JTable();
        jPanel1 = new javax.swing.JPanel();
        btnCancelar = new javax.swing.JButton();
        btnGravar = new javax.swing.JButton();
        btnPesquisar = new javax.swing.JButton();
        btnExcluir = new javax.swing.JButton();
        btnAlterar = new javax.swing.JButton();
        btnIncluir = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        jLabel6 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        txtBairro = new javax.swing.JTextField();
        txtCidade = new javax.swing.JTextField();
        txtEndereco = new javax.swing.JTextField();
        txtFantasia = new javax.swing.JTextField();
        txtRazao = new javax.swing.JTextField();
        txtCodigo = new javax.swing.JTextField();
        jPanel3 = new javax.swing.JPanel();
        jLabel13 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        txtDataCad = new javax.swing.JFormattedTextField();
        txtIe = new javax.swing.JFormattedTextField();
        txtCnpj = new javax.swing.JFormattedTextField();
        txtFax = new javax.swing.JFormattedTextField();
        txtTelefone = new javax.swing.JFormattedTextField();
        txtCep = new javax.swing.JFormattedTextField();
        txtUF = new javax.swing.JFormattedTextField();

        setClosable(true);
        setIconifiable(true);
        setTitle("Cadastro de Fornecedores");

        tblFornecedor.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Código", "Razão", "Fantasia", "Endereço", "Cidade", "Bairro", "UF", "CEP", "Telefone", "Fax", "CNPJ", "IE", "Data Cad"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tblFornecedor.getTableHeader().setReorderingAllowed(false);
        jScrollPane1.setViewportView(tblFornecedor);
        if (tblFornecedor.getColumnModel().getColumnCount() > 0) {
            tblFornecedor.getColumnModel().getColumn(0).setResizable(false);
        }

        btnCancelar.setText("Cancelar");
        btnCancelar.setEnabled(false);
        btnCancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCancelarActionPerformed(evt);
            }
        });

        btnGravar.setText("Gravar");
        btnGravar.setEnabled(false);
        btnGravar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnGravarActionPerformed(evt);
            }
        });

        btnPesquisar.setText("Pesquisar");
        btnPesquisar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPesquisarActionPerformed(evt);
            }
        });

        btnExcluir.setText("Excluir");
        btnExcluir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnExcluirActionPerformed(evt);
            }
        });

        btnAlterar.setText("Alterar");
        btnAlterar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAlterarActionPerformed(evt);
            }
        });

        btnIncluir.setText("Incluir");
        btnIncluir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnIncluirActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(btnIncluir)
                .addGap(100, 100, 100)
                .addComponent(btnAlterar)
                .addGap(100, 100, 100)
                .addComponent(btnExcluir)
                .addGap(100, 100, 100)
                .addComponent(btnPesquisar)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btnGravar)
                .addGap(100, 100, 100)
                .addComponent(btnCancelar)
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(20, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnIncluir)
                    .addComponent(btnAlterar)
                    .addComponent(btnExcluir)
                    .addComponent(btnPesquisar)
                    .addComponent(btnGravar)
                    .addComponent(btnCancelar))
                .addGap(20, 20, 20))
        );

        jLabel6.setText("Bairro:");

        jLabel5.setText("Cidade:");

        jLabel4.setText("Endereço:");

        jLabel3.setText("Fantasia:");

        jLabel2.setText("Razão:");

        jLabel1.setText("Código:");

        txtBairro.setEnabled(false);
        txtBairro.setNextFocusableComponent(txtUF);

        txtCidade.setEnabled(false);
        txtCidade.setNextFocusableComponent(txtBairro);

        txtEndereco.setEnabled(false);
        txtEndereco.setNextFocusableComponent(txtCidade);

        txtFantasia.setEnabled(false);
        txtFantasia.setNextFocusableComponent(txtEndereco);

        txtRazao.setEnabled(false);
        txtRazao.setNextFocusableComponent(txtFantasia);

        txtCodigo.setEnabled(false);
        txtCodigo.setNextFocusableComponent(txtRazao);

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel6)
                    .addComponent(jLabel4)
                    .addComponent(jLabel2)
                    .addComponent(jLabel1)
                    .addComponent(jLabel3)
                    .addComponent(jLabel5))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(txtCodigo, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtFantasia, javax.swing.GroupLayout.DEFAULT_SIZE, 200, Short.MAX_VALUE)
                    .addComponent(txtEndereco)
                    .addComponent(txtRazao)
                    .addComponent(txtBairro, javax.swing.GroupLayout.DEFAULT_SIZE, 148, Short.MAX_VALUE)
                    .addComponent(txtCidade))
                .addContainerGap(20, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtCodigo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtRazao, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtFantasia, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtEndereco, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtCidade, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtBairro, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel6))
                .addContainerGap(47, Short.MAX_VALUE))
        );

        jLabel13.setText("Data Cad:");

        jLabel12.setText("IE:");

        jLabel11.setText("CNPJ:");

        jLabel10.setText("Fax:");

        jLabel9.setText("Telefone:");

        jLabel8.setText("CEP:");

        jLabel7.setText("UF:");

        txtDataCad.setEnabled(false);

        txtIe.setEnabled(false);
        txtIe.setNextFocusableComponent(txtDataCad);

        txtCnpj.setEnabled(false);
        txtCnpj.setNextFocusableComponent(txtIe);

        txtFax.setEnabled(false);
        txtFax.setNextFocusableComponent(txtCnpj);

        txtTelefone.setEnabled(false);
        txtTelefone.setNextFocusableComponent(txtFax);

        txtCep.setEnabled(false);
        txtCep.setNextFocusableComponent(txtTelefone);

        txtUF.setEnabled(false);
        txtUF.setNextFocusableComponent(txtCep);

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel8)
                    .addComponent(jLabel7)
                    .addComponent(jLabel10)
                    .addComponent(jLabel12)
                    .addComponent(jLabel11)
                    .addComponent(jLabel13)
                    .addComponent(jLabel9))
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(txtUF, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtTelefone, javax.swing.GroupLayout.DEFAULT_SIZE, 106, Short.MAX_VALUE)
                            .addComponent(txtFax)
                            .addComponent(txtCep, javax.swing.GroupLayout.PREFERRED_SIZE, 86, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                        .addGap(19, 19, 19)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtCnpj, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 129, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addComponent(txtIe, javax.swing.GroupLayout.DEFAULT_SIZE, 94, Short.MAX_VALUE)
                                    .addComponent(txtDataCad))
                                .addGap(34, 34, 34)))))
                .addContainerGap(78, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7)
                    .addComponent(txtUF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel8)
                    .addComponent(txtCep, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel9)
                    .addComponent(txtTelefone, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel10)
                    .addComponent(txtFax, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel11)
                    .addComponent(txtCnpj, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel12)
                    .addComponent(txtIe, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtDataCad, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel13))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(83, 83, 83)
                        .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 230, Short.MAX_VALUE)
                        .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(79, 79, 79))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane1))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 123, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        getAccessibleContext().setAccessibleName("Cadastro de Fornecedores");

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnExcluirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnExcluirActionPerformed

        try {
            if (tblFornecedor.getSelectedRow() >= 0) {
                Object[] options = {"Sim", "Não"};
                if ((JOptionPane.showOptionDialog(this, "Deseja mesmo APAGAR o fornecedor selecionado?", "Aviso:", JOptionPane.YES_NO_OPTION, JOptionPane.QUESTION_MESSAGE, null, options, options[1])) == JOptionPane.YES_OPTION) {
                    DaoFornecedor f = new DaoFornecedor();
                    f.setCodFor(Integer.valueOf(tblFornecedor.getValueAt(tblFornecedor.getSelectedRow(), 0).toString()));
                    f.setCodFor(f.getCodFor());
                    f.excluir();
                    f.excluir();
                    if (f.excluir()) {
                        JOptionPane.showMessageDialog(null, "Fornecedor excluido com sucesso!", "Exclusão:", JOptionPane.INFORMATION_MESSAGE);
                    }
                    formWindowOpened(null);
                }
            }
            else{
                JOptionPane.showMessageDialog(null, "Selecione o fornecedor primeiro!", "Aviso:", JOptionPane.ERROR_MESSAGE);
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Ocorreu um erro: " + e.getMessage(), "Erro:", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_btnExcluirActionPerformed

    private void btnIncluirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnIncluirActionPerformed
        
        habilitaBotoes(false);
        habilitaCampos(true);
        limpaCampos();
        txtCodigo.setEnabled(false);
        txtRazao.requestFocus();
        gravar = true;
        txtDataCad.setEnabled(false);
        Date d = new Date();
        SimpleDateFormat sdf = new SimpleDateFormat("dd/MM/yyyy");
        txtDataCad.setValue(sdf.format(d));
    }//GEN-LAST:event_btnIncluirActionPerformed

    private void btnGravarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnGravarActionPerformed
        try {
            //Novo DaoCliente para armazenar os dados que serão Gravados/Alterados
            DaoFornecedor dfor = new DaoFornecedor();
            //O sdf declarado abaixo será usado para converter a data de String para Date
            SimpleDateFormat sdf = new SimpleDateFormat("dd/MM/yyyy");
            //Preenchendo o dcli (DaoCliente) com os dados
            try {
                try {

                    dfor.setCodFor(Integer.valueOf(txtCodigo.getText()));
                } catch (Exception e) {
                }
                dfor.setRazao(txtRazao.getText());
                dfor.setFantasia(txtFantasia.getText());
                dfor.setEndereco(txtEndereco.getText());
                dfor.setCidade(txtCidade.getText());
                dfor.setBairro(txtBairro.getText());
                dfor.setUf(txtUF.getValue().toString());
                dfor.setCep(txtCep.getValue().toString());
                dfor.setTelefone(txtTelefone.getValue().toString());
                dfor.setFax(txtFax.getValue().toString());
                dfor.setCnpj(txtCnpj.getValue().toString());
                dfor.setIe(txtIe.getValue().toString());
                dfor.setDataCad(sdf.parse(txtDataCad.getText()));
            } catch (Exception e) {
            }
            //Caso o usuário escolheu Incluir
            if (gravar) {
                dfor.incluir();
            }
            //Caso o usuário escolheu Alterar
            if (editar) {
                dfor.alterar();
            }
            //Voltando o formulário para o padrão
            habilitaBotoes(true);
            habilitaCampos(false);
            gravar = false;
            editar = false;
            limpaCampos();
            //Atualizando o JTable
            formWindowOpened(null);
            // Tratando possiveis exceções 
        } catch (SQLException e) {
            JOptionPane.showMessageDialog(null, "Oorreu um erro no Banco de Dados: " + e.getMessage(), "Erro:", JOptionPane.ERROR_MESSAGE);
        } catch (ClassNotFoundException e) {
            JOptionPane.showMessageDialog(null, "Ocorreu um erro ao carregar o driver do BD: " + e.getMessage(), "Erro:", JOptionPane.ERROR_MESSAGE);
            // } catch (ParseException e) {
            //     JOptionPane.showMessageDialog(null, "Ocorreu um erro de conversão: " + e.getMessage(), "Erro:", JOptionPane.ERROR_MESSAGE);
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Ocorreu um erro: " + e.getMessage(), "Erro:", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_btnGravarActionPerformed

    private void btnAlterarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAlterarActionPerformed
        habilitaBotoes(false);
        habilitaCampos(true);
        limpaCampos();
        txtCodigo.setEnabled(false);
        txtRazao.requestFocus();
        editar = true;
        txtDataCad.setEnabled(false);
        try {
            //Verifica se tem clientes no grid
            if (tblFornecedor.getRowCount() > 0) {
                //linha selecionada no JTable
                int posLinha = tblFornecedor.getSelectedRow();
                //Verificando se alinha foi selecionada, caso 'true' pega os dados da respectiva liha e envia para os campos
                if (posLinha >= 0) {
                    txtCodigo.setText(tblFornecedor.getValueAt(posLinha, 0).toString());
                    txtRazao.setText(tblFornecedor.getValueAt(posLinha, 1).toString());
                    txtFantasia.setText(tblFornecedor.getValueAt(posLinha, 2).toString());
                    txtEndereco.setText(tblFornecedor.getValueAt(posLinha, 3).toString());
                    txtCidade.setText(tblFornecedor.getValueAt(posLinha, 4).toString());
                    txtBairro.setText(tblFornecedor.getValueAt(posLinha, 5).toString());
                    //Os Campos abaixo são JFormattedTextField, por isso usaremos setValue()
                    txtUF.setValue(tblFornecedor.getValueAt(posLinha, 6).toString());
                    if (tblFornecedor.getValueAt(posLinha, 7).toString().equals("#####-###")) {
                        txtCep.setValue("");
                    } else {
                        //Usamos o MaskFormatter abaixo para converter e 'textoParaValor' <--> stringToValue o dado do telefone, pois ele está formatado pelo mesmo.
                        txtCep.setValue(mfCep.stringToValue(tblFornecedor.getValueAt(posLinha, 7).toString()).toString());
                    }
                    //txtCep.setValue(tblFornecedor.getValueAt(posLinha, 7).toString());
                    //Vrificando se o campo Telefone no JTable está vazio
                    if (tblFornecedor.getValueAt(posLinha, 8).toString().equals("(__)_____-____")) {
                        txtTelefone.setValue("");
                    } else {
                        //Usamos o MaskFormatter abaixo para converter e 'textoParaValor' <--> stringToValue o dado do telefone, pois ele está formatado pelo mesmo.
                        txtTelefone.setValue(mfTel.stringToValue(tblFornecedor.getValueAt(posLinha, 8).toString()).toString());
                    }
                    if (tblFornecedor.getValueAt(posLinha, 9).toString().equals("(__)____-____")) {
                        txtFax.setValue("");
                    } else {
                        //Usamos o MaskFormatter abaixo para converter e 'textoParaValor' <--> stringToValue o dado do telefone, pois ele está formatado pelo mesmo.
                        txtFax.setValue(mfFax.stringToValue(tblFornecedor.getValueAt(posLinha, 9).toString()).toString());
                    }
                    //txtFax.setValue(tblFornecedor.getValueAt(posLinha, 9).toString());
                    if (tblFornecedor.getValueAt(posLinha, 10).toString().equals("##.###.###-####-##")) {
                        txtCnpj.setValue("");
                    } else {
                        //Usamos o MaskFormatter abaixo para converter e 'textoParaValor' <--> stringToValue o dado do telefone, pois ele está formatado pelo mesmo.
                        txtCnpj.setValue(mfCnpj.stringToValue(tblFornecedor.getValueAt(posLinha, 10).toString()).toString());
                    }
                    //txtCnpj.setValue(tblFornecedor.getValueAt(posLinha, 10).toString());
                    if (tblFornecedor.getValueAt(posLinha, 11).toString().equals("########-##")) {
                        txtIe.setValue("");
                    } else {
                        //Usamos o MaskFormatter abaixo para converter e 'textoParaValor' <--> stringToValue o dado do telefone, pois ele está formatado pelo mesmo.
                        txtIe.setValue(mfIe.stringToValue(tblFornecedor.getValueAt(posLinha, 11).toString()).toString());
                    }
                    //txtIe.setValue(tblFornecedor.getValueAt(posLinha, 11).toString());
                    txtDataCad.setValue(tblFornecedor.getValueAt(posLinha, 12).toString());
                } else {
                    JOptionPane.showMessageDialog(null, "Selecione um fornecedor para alterar!", "Erro", JOptionPane.ERROR_MESSAGE);
                    btnCancelarActionPerformed(null);
                }
            } else {
                JOptionPane.showMessageDialog(null, "Não há fornecedores cadastrados ainda!", "Erro:", JOptionPane.ERROR_MESSAGE);
                btnCancelarActionPerformed(null);
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Ocorreu um erro: " + e.getMessage(), "Erro:", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_btnAlterarActionPerformed

    private void btnCancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCancelarActionPerformed
        habilitaBotoes(true);
        habilitaCampos(false);
        limpaCampos();
        gravar = false;
        editar = false;
        formWindowOpened(null);
    }//GEN-LAST:event_btnCancelarActionPerformed

    private void btnPesquisarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPesquisarActionPerformed
//        DaoFornecedor c = new DaoFornecedor();
//        String fantasia = JOptionPane.showInputDialog(null, "Informe a fantasia do fornecedor ou parte dele:", "Pesquisa:", JOptionPane.QUESTION_MESSAGE);
//        c.setFantasia(fantasia);
        DaoFornecedor f = new DaoFornecedor();
        try {
//            ArrayList<DaoFornecedor> listafFornecedores = c.pesquisar(c);
//            atualizaTable(listafFornecedores);
            String razao = JOptionPane.showInputDialog(this, "Informe a razão do fornecedor ou parte dele:", "Pesquisar", JOptionPane.QUESTION_MESSAGE);
            if (razao != null) {
                f.setRazao(razao);
                
                btnCancelar.setEnabled(true);
                if (f.pesquisar(f).isEmpty()) {
                    JOptionPane.showMessageDialog(null, "O fornecedor não foi encontrado", "Erro:", JOptionPane.ERROR_MESSAGE);
                } else {
                    atualizaTable(f.pesquisar(f));
                    tblFornecedor.setRowSelectionInterval(0, 0);
                    //tblFornecedorMouseClicked(null);
                }
            }
        } catch (SQLException e) {
            JOptionPane.showMessageDialog(null, "Oorreu um erro no DB: " + e.getMessage(), "Erro:", JOptionPane.ERROR_MESSAGE);
        } catch (ClassNotFoundException e) {
            JOptionPane.showMessageDialog(null, "Oorreu um erro de classe: " + e.getMessage(), "Erro:", JOptionPane.ERROR_MESSAGE);
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Oorreu um erro: " + e.getMessage(), "Erro:", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_btnPesquisarActionPerformed

    private void formWindowClosing(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosing
        try {
            Object[] btn = {"  Sim  ", "  Não  "};
            if (JOptionPane.showOptionDialog(this, "Deseja mesmo sair?", "Aviso:",
                    JOptionPane.YES_NO_OPTION,
                    JOptionPane.QUESTION_MESSAGE, null, //new ImageIcon("") ,
                    btn, btn[1]) == JOptionPane.YES_OPTION) {
                //Encerra a JVM atual e consequentemente o sistema nela rodando
                System.exit(0);
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Erro:\n" + e.getMessage(), "Erro no encerramento:",
                    JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_formWindowClosing

    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
        DaoFornecedor c = new DaoFornecedor();
        c.setFantasia("");
        ArrayList<DaoFornecedor> ListaFornecedores;
        try {
            ListaFornecedores = c.pesquisar(c);
            atualizaTable(ListaFornecedores);
        } catch (SQLException e) {
            JOptionPane.showMessageDialog(null, "Ocorreu um erro no DB: " + e.getMessage(), "Erro:", JOptionPane.ERROR_MESSAGE);
        } catch (ClassNotFoundException e) {
            JOptionPane.showMessageDialog(null, "Ocorreu um erro de classe: " + e.getMessage(), "Erro:", JOptionPane.ERROR_MESSAGE);
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Ocorreu um erro: " + e.getMessage(), "Erro:", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_formWindowOpened

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(FrmFornecedor.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(FrmFornecedor.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(FrmFornecedor.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(FrmFornecedor.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new FrmFornecedor().setVisible(true);
            }
        });
    }
    
    private void limpaTable() {
        DefaultTableModel model = (DefaultTableModel) tblFornecedor.getModel();
        while (model.getRowCount() > 0) {
            model.removeRow(0);
        }
    }

    private void atualizaTable(ArrayList<DaoFornecedor> fornecedores) {
        //Limpando os dados da Tabela
        limpaTable();
        //Objeto para formatar Datas
        SimpleDateFormat sdf = new SimpleDateFormat("dd/MM/yyyy");
        if (fornecedores.isEmpty()) {
            JOptionPane.showMessageDialog(null, "Não foram encontrados fornecedores no banco de dados.", "Atenção:", JOptionPane.INFORMATION_MESSAGE);
        } else {
            
            DefaultTableModel dadosFornecedor = (DefaultTableModel) tblFornecedor.getModel();
            //Linha em branco para incluir na tabela e criar espaço para inserir dados
            String Linha[] = new String[]{"", "", "", "", "", "", "", "", "", "", "", "", ""};
            try {
                //Criado como referencia para posição da linha
                int posicao = -1;
                for (DaoFornecedor fornecedor : fornecedores) {
                    posicao++;
                    //inluindo linhas em branco
                    dadosFornecedor.addRow(Linha);
                    //preenchendo a linha em branco, celula e celula
                    dadosFornecedor.setValueAt(fornecedor.getCodFor(), posicao, 0);
                    dadosFornecedor.setValueAt(fornecedor.getRazao(), posicao, 1);
                    dadosFornecedor.setValueAt(fornecedor.getFantasia(), posicao, 2);
                    dadosFornecedor.setValueAt(fornecedor.getEndereco(), posicao, 3);
                    dadosFornecedor.setValueAt(fornecedor.getCidade(), posicao, 4);
                    dadosFornecedor.setValueAt(fornecedor.getBairro(), posicao, 5);
                    dadosFornecedor.setValueAt(fornecedor.getUf().toUpperCase(), posicao, 6);
                    
                    dadosFornecedor.setValueAt(mfCep.valueToString(fornecedor.getCep()), posicao, 7);
                    
                    dadosFornecedor.setValueAt(mfTel.valueToString(fornecedor.getTelefone()), posicao, 8);
                    
                    dadosFornecedor.setValueAt(mfFax.valueToString(fornecedor.getFax()), posicao, 9);
                    dadosFornecedor.setValueAt(mfCnpj.valueToString(fornecedor.getCnpj()), posicao, 10);
                    dadosFornecedor.setValueAt(mfIe.valueToString(fornecedor.getIe()), posicao, 11);
                    
                    dadosFornecedor.setValueAt(sdf.format(fornecedor.getDataCad().getTime()), posicao, 12);
                }
                
                tblFornecedor.setModel(dadosFornecedor);
            } catch (Exception e) {
                JOptionPane.showMessageDialog(null, "Ocorreu um erro: " + e.getMessage(), "Erro:", JOptionPane.ERROR_MESSAGE);
            }
        }
    }

    private void habilitaBotoes(boolean hab) {
        btnIncluir.setEnabled(hab);
        btnAlterar.setEnabled(hab);
        btnExcluir.setEnabled(hab);
        btnPesquisar.setEnabled(hab);
        btnGravar.setEnabled(!hab);
        btnCancelar.setEnabled(!hab);
    }

    private void habilitaCampos(boolean hab) {
        txtCodigo.setEnabled(hab);
        txtRazao.setEnabled(hab);
        txtFantasia.setEnabled(hab);
        txtEndereco.setEnabled(hab);
        txtCidade.setEnabled(hab);
        txtBairro.setEnabled(hab);
        txtUF.setEnabled(hab);
        txtCep.setEnabled(hab);
        txtTelefone.setEnabled(hab);
        txtFax.setEnabled(hab);
        txtCnpj.setEnabled(hab);
        txtIe.setEnabled(hab);
        txtDataCad.setEnabled(hab);
    }

    private void limpaCampos() {
        txtCodigo.setText("");
        txtRazao.setText("");
        txtFantasia.setText("");
        txtEndereco.setText("");
        txtCidade.setText("");
        txtBairro.setText("");
        //Os campos abaixo são JFormattedTextField, por isso usaremos setValue()
        txtUF.setValue("");
        txtCep.setValue("");
        txtTelefone.setValue("");
        txtFax.setValue("");
        txtCnpj.setValue("");
        txtIe.setValue("");
        txtDataCad.setValue("");
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAlterar;
    private javax.swing.JButton btnCancelar;
    private javax.swing.JButton btnExcluir;
    private javax.swing.JButton btnGravar;
    private javax.swing.JButton btnIncluir;
    private javax.swing.JButton btnPesquisar;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tblFornecedor;
    private javax.swing.JTextField txtBairro;
    private javax.swing.JFormattedTextField txtCep;
    private javax.swing.JTextField txtCidade;
    private javax.swing.JFormattedTextField txtCnpj;
    private javax.swing.JTextField txtCodigo;
    private javax.swing.JFormattedTextField txtDataCad;
    private javax.swing.JTextField txtEndereco;
    private javax.swing.JTextField txtFantasia;
    private javax.swing.JFormattedTextField txtFax;
    private javax.swing.JFormattedTextField txtIe;
    private javax.swing.JTextField txtRazao;
    private javax.swing.JFormattedTextField txtTelefone;
    private javax.swing.JFormattedTextField txtUF;
    // End of variables declaration//GEN-END:variables
}
